-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity reduce_4 is
port (
    ap_ready : OUT STD_LOGIC;
    x_0_hwPt_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_1_hwPt_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_0_hwEta_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    x_1_hwEta_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    x_0_hwPhi_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    x_1_hwPhi_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (9 downto 0) );
end;


architecture behav of reduce_4 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal icmp_ln1496_fu_64_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1496_fu_70_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln84_fu_76_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln84_5_fu_84_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln84_6_fu_92_p3 : STD_LOGIC_VECTOR (9 downto 0);


begin



    ap_ready <= ap_const_logic_1;
    ap_return_0 <= select_ln84_fu_76_p3;
    ap_return_1 <= select_ln84_5_fu_84_p3;
    ap_return_2 <= select_ln84_6_fu_92_p3;
    icmp_ln1496_fu_64_p2 <= "1" when (unsigned(x_0_hwPt_V_read) < unsigned(x_1_hwPt_V_read)) else "0";
    select_ln84_5_fu_84_p3 <= 
        x_0_hwEta_V_read when (xor_ln1496_fu_70_p2(0) = '1') else 
        x_1_hwEta_V_read;
    select_ln84_6_fu_92_p3 <= 
        x_0_hwPhi_V_read when (xor_ln1496_fu_70_p2(0) = '1') else 
        x_1_hwPhi_V_read;
    select_ln84_fu_76_p3 <= 
        x_0_hwPt_V_read when (xor_ln1496_fu_70_p2(0) = '1') else 
        x_1_hwPt_V_read;
    xor_ln1496_fu_70_p2 <= (icmp_ln1496_fu_64_p2 xor ap_const_lv1_1);
end behav;
