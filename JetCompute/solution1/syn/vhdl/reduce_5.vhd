-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity reduce_5 is
port (
    ap_ready : OUT STD_LOGIC;
    x_0_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
    x_1_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
    x_2_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
    x_3_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
    x_4_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
    x_5_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
    x_6_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
    x_7_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
    x_8_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
    x_9_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
    x_10_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
    x_11_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
    x_12_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
    x_13_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
    x_14_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
    x_15_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (4 downto 0) );
end;


architecture behav of reduce_5 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal p_s_reduce_fu_140_ap_ready : STD_LOGIC;
    signal p_s_reduce_fu_140_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal p_5_reduce_fu_160_ap_ready : STD_LOGIC;
    signal p_5_reduce_fu_160_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln209_fu_180_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln209_1_fu_184_p1 : STD_LOGIC_VECTOR (4 downto 0);

    component reduce IS
    port (
        ap_ready : OUT STD_LOGIC;
        x_0_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
        x_1_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
        x_2_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
        x_3_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
        x_4_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
        x_5_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
        x_6_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
        x_7_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;



begin
    p_s_reduce_fu_140 : component reduce
    port map (
        ap_ready => p_s_reduce_fu_140_ap_ready,
        x_0_V_read => x_0_V_read,
        x_1_V_read => x_1_V_read,
        x_2_V_read => x_2_V_read,
        x_3_V_read => x_3_V_read,
        x_4_V_read => x_4_V_read,
        x_5_V_read => x_5_V_read,
        x_6_V_read => x_6_V_read,
        x_7_V_read => x_7_V_read,
        ap_return => p_s_reduce_fu_140_ap_return);

    p_5_reduce_fu_160 : component reduce
    port map (
        ap_ready => p_5_reduce_fu_160_ap_ready,
        x_0_V_read => x_8_V_read,
        x_1_V_read => x_9_V_read,
        x_2_V_read => x_10_V_read,
        x_3_V_read => x_11_V_read,
        x_4_V_read => x_12_V_read,
        x_5_V_read => x_13_V_read,
        x_6_V_read => x_14_V_read,
        x_7_V_read => x_15_V_read,
        ap_return => p_5_reduce_fu_160_ap_return);




    ap_ready <= ap_const_logic_1;
    ap_return <= std_logic_vector(unsigned(zext_ln209_fu_180_p1) + unsigned(zext_ln209_1_fu_184_p1));
    zext_ln209_1_fu_184_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_5_reduce_fu_160_ap_return),5));
    zext_ln209_fu_180_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_s_reduce_fu_140_ap_return),5));
end behav;
